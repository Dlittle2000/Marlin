/**
 * Marlin 3D Printer Firmware
<<<<<<< HEAD
<<<<<<< HEAD:Marlin/src/HAL/STM32/Servo.h
 * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
 * Copyright (c) 2017 Victor Perez
=======
=======
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274
 * Copyright (c) 2019 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
<<<<<<< HEAD
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274:Marlin/src/HAL/DUE/dogm/u8g_com_HAL_DUE_sw_spi_shared.h
=======
 * Copyright (c) 2017 Victor Perez
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
#pragma once

<<<<<<< HEAD
#include "../../../inc/MarlinConfigPre.h"
#include "../../shared/Marduino.h"
#include <U8glib.h>

void u8g_SetPIOutput_DUE(u8g_t *u8g, uint8_t pin_index);
void u8g_SetPILevel_DUE(u8g_t *u8g, uint8_t pin_index, uint8_t level);

void u8g_spiSend_sw_DUE_mode_0(uint8_t val);
void u8g_spiSend_sw_DUE_mode_3(uint8_t val);

<<<<<<< HEAD:Marlin/src/HAL/STM32/Servo.h
#include "../../core/millis_t.h"
=======
#include <Servo.h>
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274

// Inherit and expand on the official library
class libServo : public Servo {
  public:
<<<<<<< HEAD
    libServo();
=======
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274
    int8_t attach(const int pin);
    int8_t attach(const int pin, const int min, const int max);
    void move(const int value);
  private:
    typedef Servo super;
<<<<<<< HEAD

    int servo_pin = 0;
    millis_t delay = 0;
};
=======
extern Pio *SCK_pPio, *MOSI_pPio;
extern uint32_t SCK_dwMask, MOSI_dwMask;
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274:Marlin/src/HAL/DUE/dogm/u8g_com_HAL_DUE_sw_spi_shared.h
=======
    uint16_t min_ticks, max_ticks;
    uint8_t servoIndex;               // index into the channel data for this servo
};
>>>>>>> 384da308fd33ad4eda83f2355ba88a23c87bb274
